# Generated by Django 3.2.13 on 2022-07-29 00:43

from django.db import migrations


def create_patterns(apps, schema_editor):
    patterns = (
        {'type': '1', 'parameter': 100, 'goal': 45, 'weight': 1},
        {'type': '2', 'parameter': 100, 'goal': 60, 'weight': 1},
        {'type': '3', 'parameter': 100, 'goal': 60, 'weight': 2},
        {'type': '4', 'parameter': 80, 'goal': 40, 'weight': 1},
        {'type': '5', 'parameter': 95, 'goal': 95, 'weight': 2},
        {'type': '6', 'parameter': 100, 'goal': 50, 'weight': 2},
        {'type': '7', 'parameter': 100, 'goal': 50, 'weight': 1},
    )
    IndicatorPattern = apps.get_model('indicator', 'IndicatorPattern')
    for p in patterns:
        try:
            ip = IndicatorPattern.objects.get(
                type=p['type'],
                year=2022,
                is_active=True
            )
            ip.parameter = p['parameter']
            ip.goal = p['goal']
            ip.weight = p['weight']
            ip.save()

        except IndicatorPattern.DoesNotExist:    
            IndicatorPattern.objects.create(
                type=p['type'],
                parameter=p['parameter'],
                goal=p['goal'],
                weight=p['weight'],
                year=2022,
                is_active=True
            )


class Migration(migrations.Migration):

    dependencies = [
        ('indicator', '0004_auto_20220728_1359'),
    ]

    operations = [
        migrations.RunPython(create_patterns),
    ]
